<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AKSpBWABwQA73ndd1fyQnSitPBJAf//Z
</value>
  </data>
</root>